\SweaveOpts{fig=T,echo=F}
\setkeys{Gin}{width=0.8\textwidth}

\section{Estudo de caso 2: Modelo 
n\~ao linear do crescimento populacional de {\em Tribolium}}

Embora a teoria para calcular sensibilidades e elasticidades de modelos matriciais
lineares remonte ao final d\'ecada de 70, uma teoria para o estudo consistente
de \'indices de sensibilidade para modelos n\~ao lineares (por exemplo, nos quais
taxas de transi\c c\~ao dependem da densidade ou frequ\^encia de alguma classe)
s\'o foi formalizada por Hal Caswell em uma s\'erie de trabalhos publicados entre 2008
e 2010.

Assim, a sensibilidade de modelos matriciais gerais em ecologia de popula\c c\~oes
vem sendo feita por uma abordagem anal\'itica, que, em linhas gerais, consiste em
linearizar a matriz de transi\c c\~ao pr\'oxima ao ponto de equil\'ibrio e aplicar
regras do c\'alculo matricial para extrair resultados anal\'iticos sobre a 
sensibilidade da matriz linearizada aos par\^ametros.

A sensibilidade do resultado $y$ de um modelo a um par\^ametro $x$ \'e dada pela derivada
$\frac{dy}{dx}$, e representa o efeito aditivo que uma pequena pequena perturba\c c\~ao 
em $x$ exerce no resultado $y$. J\'a a elasticidade de $y$ em rela\c c\~ao a $x$ \'e dada por
$\frac{x}{y}\frac{dy}{dx}$, e representa o efeito proporcial dessa pequena perturba\c c\~ao.

Um exemplo muito utilizado pelo Caswell para ilustrar sensibilidade em modelos com 
denso-dependencia \'e o modelo para o crescimento populacional do besouro {\em Tribolium}.

A matriz de transi\c c\~ao desse modelo \'e:

\begin{equation}
	\mathbf{A}[\mathbf{\theta},\mathbf{n}]  = \left[
		\begin{array} {ccccccc}
			0 &   0 &   b \exp(-c_{el}n_1-c_{ea}n_3) \\
			1 - \mu_l & 0 & 0 \\
			0 & \exp(-c_{pa}n_3) & 1-\mu_a 
		\end{array}
		\right]
		\label{TribLefMatrix}
\end{equation}

Aqui, $\mathbf{n}(t)$ \'e o vetor que representa a popula\c c\~ao de besouros dividida em
tr\^es fases de vida, larva, pupa e adulto e $\mathbf{\theta}$ \'e o vetor de par\^ametros.

Os termos n\~ao nulos dessa matriz, lendo da esquerda para a direita e de cima para baixo, s\~ao:
\begin{itemize}
	\item Fecundidade dos adultos, dada pelo tamanho da ninhada $b$ vezes um termo de redu\c c\~ao
		devido a canibalismo dos ovos por adultos (a uma taxa $c_{ea}$) e por larvas (a uma taxa $c_{el}$);
	\item Matura\c c\~ao das larvas, reduzida pela mortalidade natural das larvas $\mu_l$;
	\item Eclos\~ao das pupas, reduzida pelo canibalismo por adultos a uma taxa $c_{pa}$ - a mortalidade
		natural das pupas \'e efetivamente zero;
	\item Perman\^encia na classe adulta, menos a mortalidade natural dos adultos $\mu_a$.
\end{itemize}

Os par\^ametros estimados pelo paper original (por Costantino, 1997) s\~ao:

<<params, fig=FALSE, echo=TRUE>>=
b = 6.598
cea = 1.155e-2
cel = 1.209e-2
cpa = 4.7e-3
mua = 7.729e-3
mul = 2.055e-1
@

<<load, fig=FALSE, echo=FALSE>>=
#library(sensitivity)
library(MASS)
library(pse)
source("R/pse.R")
library(msm) # Para a funcao qtnorm
# Entradas da matriz:
# Vindos de Costantino et al., 1997
factors <- c("b", "cea", "cel", "cpa", "mua", "mul");
f <-c (b, cea, cel, cpa, mua, mul)
ct <- c(9, 1, 4.5) # metabolic rates
q <- rep("qtnorm", length(factors))
r <- rep("rtnorm", length(factors))
commonsd <- 1e-8
q.arg <- list(
			  list(mean=b, sd=commonsd, lower=0, upper=100),
			  list(mean=cea, sd=commonsd, lower=0, upper=1),
			  list(mean=cel, sd=commonsd, lower=0, upper=1),
			  list(mean=cpa, sd=commonsd, lower=0, upper=1),
			  list(mean=mua, sd=commonsd, lower=0, upper=1),
			  list(mean=mul, sd=commonsd, lower=0, upper=1))
Tribolium <- function(b, cea, cel, cpa, mua, mul) {
		Np <- c(20, 20, 300) #Near steady-state
		epsilon = 10e-6
		exit = FALSE
		nIter <- 0 
		while (exit == FALSE) {
				nIter <- nIter + 1
				L <- matrix(c(0, 0, b*exp(-cel*Np[1] - cea*Np[3]),
							1-mul, 0, 0,
							0, exp(-cpa*Np[3]), 1-mua), nrow=3, byrow=TRUE)
				newp <- L %*% Np
				if (sqrt (sum(newp-Np)^2) < epsilon | nIter == 2000 ) exit = TRUE
				if (nIter == 2000) {
					print ("WARNING: max iterations reached");
					print (c(b, cea, cel, cpa, mua, mul));
					return (NA);
				}
				Np <- newp
		}
	result <- ct %*% Np;
	return (result);
}
TheModel <- function (x) {
	return(mapply(Tribolium, x[,1], x[,2],x[,3],x[,4],x[,5],x[,6]))
}
#LHSpeq <- LHS(TheModel, factors, 800, q, q.arg, nboot=100)
#save(LHSpeq, file="Triboliumpeq.Rdata")
load("R/Triboliumpeq.Rdata")
@

O paper original se importa com o equivalente metab\'olico dos besouros nas diferentes fases de vida,
que \'e dado pela express\~ao $N_m(t) = \mathbf{c}^T\mathbf{n}(t)$, onde $\mathbf{c}^T = ( 9, 1,  4.5)
\mu l CO_2h^{-1}$. 
Assim, em todos os c\'alculos abaixo, vamos nos focar em $N_m(t)$, que \'e uma quantidade escalar.

Com estes par\^ametros, o modelo converge para um ponto fixo est\'avel no qual $N_m(t) = 1952$.

A an\'alise de elasticidade anal\'itica, seguindo Caswell 
(e replicando a figura apresentada no trabalho de 2008), segue na figura \ref{analitico}:

\begin{figure}[h!]
<<caswell, fig=TRUE>>=
theta <- c(b, cea, cel, cpa, mua, mul)
ct <- matrix(c(9, 1, 4.5), ncol=3) # metabolic rates
########### POP EM EQUILIBRIO #####
n<- matrix(c(22.6, 18, 385.2), nrow=3) ## equilibrium n
############ MATRIZ A ########
xp <- exp(-cel*n[1]-cea*n[3])
A.n <- matrix(c(0,0, b*xp, 1-mul, 0, 0, 0, exp(-cpa*n[3]), 1-mua), nrow=3, byrow=T)
############ AUXILIARES
n.1 <- diag(as.vector(1/n))
Mtheta <- diag(as.vector(theta))
I <- diag(3)
K <- kronecker(t(n), I)
############ DERIVADAS
dvecAdnt <- matrix(c(
					 0,0,0, 
					 0,0,0, 
					 0,0,0, 
					 0,0,0, 
					 0,0,0, 
					 0,0,-cpa*exp(-cpa*n[3]), 
					 -b*cel*xp,0, -b*cea*xp,
					 0,0,0, 
					 0,0,0), nrow=9, byrow=T)
dvecAdtheta <- matrix(c(
				     0,0,0,0,0,0,
				     0,0,0,0,0,-1,
				     0,0,0,0,0,0,
				     0,0,0,0,0,0,
				     0,0,0,0,0,0,
				     0,0,0,-n[3]*exp(-cpa*n[3]),0,0,
				     xp,-b*n[3]*xp,-b*n[1]*xp,0,0,0,
				     0,0,0,0,0,0,
				     0,0,0,0,-1,0), nrow=9, byrow=T)
#sensibilidade
dndtheta <- ginv(I-A.n-K%*%dvecAdnt) %*% K %*% dvecAdtheta
#elasticidade
elas <- n.1 %*% dndtheta %*% Mtheta
dNdtheta <- as.numeric(1/(ct %*% n)) * ct %*% dndtheta %*% Mtheta
barplot(dNdtheta, names=c("b", "cea", "cel", "cpa", "mua", "mul"), ylim=c(-1,1))
@
	\caption{An\'alise de elasticidade anal\'itica para o modelo de
	crescimento de besouros do g\^enero {\em Tribolium}. As barras
	representam a elasticidade do equivalente metab\'olico da 
	popula\c c\~ao aos par\^ametros.}
	\label{analitico}
\end{figure}

Um aumento na fecundidade dos besouros causa uma altera\c c\~ao 
positiva no valor de $N_m(t)$. Todos os outros par\^ametros levam
a elasticidades negativas, com $c_{ea}$ tendo o maior impacto.

Usando uma abordagem estoc\'astica de explora\c c\~ao de espa\c co
de par\^ametros com o hipercubo latino, podemos recalcular essas
elasticidades sorteando valores de uma matriz normal centrada na
estimativa original e com baixa dispers\~ao. O resultado, apresentado
na figura \ref{LHSpeq}, mostra que h\'a uma boa correspond\^encia entre os
m\'etodos.

\begin{figure}
<<LHSpeq>>=
plotelast(LHSpeq)
@
	\caption{An\'alise de elasticidade estoc\'astica para o modelo de
	crescimento de besouros do g\^enero {\em Tribolium} assumindo
	pequenos erros de medida. As barras
	representam a elasticidade do equivalente metab\'olico da 
	popula\c c\~ao aos par\^ametros.}
	\label{LHSpeq}
\end{figure}

No entanto, o m\'etodo desenvolvido por Caswell se limita a uma 
vizinhan\c ca muito pr\'oxima ao ponto correspondente aos 
par\^ametros estimados. Caso o erro na estimativa seja suficientemente
grande para que a aproxima\c c\~ao linear da matriz de transi\c c\~ao
se torne inv\'alida, outros m\'etodos se fazem necess\'arios para
estudar a sensibilidade do modelo. 
O qu\~ao ``grande'' esse erro
deve ser depende fortemente do modelo utilizado.
Uma possibilidade anal\'itica para
resolver seria a inclus\~ao de derivadas de segunda ordem nos c\'alculos,
ou ordens maiores, o que levaria a um crescimento muito r\'apido
na complexidade das contas realizadas.

A abordagem estoc\'astica para estimar a sensibilidade dos par\^ametros
tem a vantagem de ser feita da mesma forma, n\~ao importando o tamanho
da incerteza nos par\^ametros. Realizando a mesma an\'alise, mas agora com
uma distribui\c c\~ao uniforme dos par\^ametros, 
encontramos um cen\'ario de n\~ao-linearidade. A figura \ref{corPlot}
mostra os gr\'aficos de dispers\~ao, mostrando uma forte resposta
n\~ao linear ao par\^ametro $c_{ea}$ e poss\'iveis intera\c c\~oes 
entre os par\^ametros. Para esta an\'alise, foram exclu\'idas as
simula\c c\~oes na qual a popula\c c\~ao n\~ao convergiu para um
ponto fixo ap\'os 2000 itera\c c\~oes.

\begin{figure}
<<corPlot, echo=FALSE>>=
q <- rep("qunif", length(factors))
q.arg <- list(
			  list(min=2, max=12),
			  list(min=0, max=1),
			  list(min=0, max=1),
			  list(min=0, max=1),
			  list(min=0, max=1),
			  list(min=0, max=1))
# LHSlge <- LHS(TheModel, factors, 800, q, q.arg, nboot=100)
# save(LHSlge, file="Triboliumlge.Rdata")
load("R/Triboliumlge.Rdata")
plotscatter(LHSlge) ->ign
mud.elas <- round(100*(elast(LHSlge)-elast(LHSpeq))/elast(LHSpeq))
@
	\caption{Diagramas de dispers\~ao do equivalente metab\'olico
	do besouro {\em Tribolium} em rela\c c\~ao a mudan\c cas
	de larga magnitude nos par\^ametros de entrada do modelo}
	\label{corPlot}
\end{figure}

Ao fazer uma compara\c c\~ao sobre a elasticidade de modelos usando
a abordagem estoc\'astica, \'e preciso lembrar que a elasticidade
dos par\^ametro n\~ao pode ser calculada a partir da 
f\'ormula $\frac{x}{y}\frac{dy}{dx}$. Em primeiro lugar, a estimativa
da derivada precisa ser realizada numericamente, e em segundo lugar, 
a fra\c c\~ao $\frac{x}{y}$ n\~ao faz sentido se n\~ao h\'a um ponto
privilegiado ao redor do qual a an\'alise est\'a sendo feita. Portanto,
definimos como elasticidade de $y$ em rela\c c\~ao a $x$ o produto
$\frac{<x>}{<y>}s_{yx}$, em que o sinal de $<>$ representa 
a m\'edia e $s_{yx}$ \'e o coeficiente linear da regress\~ao parcial
de $y$ em fun\c c\~ao de $x$.

O resultado dessa an\'alise de elasticidade, sem restringir os par\^ametros
a uma pequena regi\~ao no entorno da medida obtida, podem ser visualizados
na figura \ref{LHSlge}. Embora n\~ao haja nenhum par\^ametro cuja elasticidade
troca de sinal, todos apresentam uma diferen\c ca acentuada. A maior
diferen\c ca \'e dada na elasticidade do par\^ametro $\mu_l$, que 
sofre um aumento de \Sexpr{mud.elas[6]}\%. 

Dada essa mudan\c ca importante nos valores, conv\'em lembrar que a
contradi\c c\~ao entre a an\'alise anal\'itica e a estoc\'astica
n\~ao significa que um dos m\'etodos est\'a mais correto do que outro, mas
sim que eles representam respostas a diferentes quest\~oes.

\begin{figure}
<<LHSlge>>=
plotelast(LHSlge)
@
	\caption{An\'alise de elasticidade estoc\'astica para o modelo de
	crescimento de besouros do g\^enero {\em Tribolium} para par\^ametros
	distribu\'idos uniformemente. As barras
	representam a elasticidade do equivalente metab\'olico da 
	popula\c c\~ao aos par\^ametros.}
	\label{LHSlge}
\end{figure}

\begin{shaded}
Vamos prosseguir agora a um estudo integrativo da calibração dos parâmetros do
modelo e da incerteza dos resultados do modelo, usando a metodologia de Generalized
Likelihood Uncertainty Estimation (GLUE). Para isso, usaremos os dados de 
{\em Tribolium} da réplica A do trabalho de Desharnais \& Liu \citep{Desharnais87}.

<<dadosDesharnais>>=
days <- seq(0, 266, by=14)
adults <- c(64, 78, 78, 77, 61, 85, 102, 104, 120, 122, 132, 120, 113, 97, 136, 122, 117, 105, 120, 99)
pupae <- c(35, 4, 109, 28, 77, 71, 36, 136, 35, 76, 28, 252, 5, 236, 20, 176, 7, 189, 12, 226)
larvae <- c(70, 263, 75, 125, 203, 57, 182, 27, 265, 32, 309, 8, 360, 24, 357, 117, 373, 14, 404, 2)
trib <- data.frame(adults, pupae, larvae)
trib.conf <- as.vector(t(trib))
rownames(trib) <- days
matplot(trib, type='l')
# Nova funcao para calcular a serie temporal completa, e nao apenas o eq. metabolico da pop final
Tribolium <- function(b, cea, cel, cpa, mua, mul, a, p, l, time) {
		Np <- c(a, p, l) #Pop inicial!
		myp <- Np
		for(i in 1:time) {
				L <- matrix(c(0, 0, abs(b)*exp(-abs(cel)*Np[1] - abs(cea)*Np[3]),
							1-abs(mul), 0, 0,
							0, exp(-abs(cpa)*Np[3]), 1-abs(mua)), nrow=3, byrow=TRUE)
				myp <- L %*% myp
				Np <- c(Np, myp)
		}
#	result <- ct %*% Np;
	return (Np);
}
TheModel <- function (x) {
	return(mapply(Tribolium, x[,1], x[,2],x[,3],x[,4],x[,5],x[,6], 64, 35, 70, 19))
}
### OTIMIZACAO NAO FUNCIONA!!!
logistic <- function (p) exp(p)/(1+exp(p))
logit <- function (p) log(p) - log(1-p)
constrain <- function(x) c(exp(x[1]), logistic(x[2]), logistic(x[3]), logistic(x[4]), logistic(x[5]), logistic(x[6]))
ssqres <- function (x) sum((Tribolium(x[1], x[2], x[3], x[4], x[5], x[6], 64, 35, 70, 19) - trib.conf)^2)
cssqres <- function(x) ssqres(constrain(x))
a <- optim(par=c(log(b), logit(cea), logit(cel), logit(cpa), logit(mua), logit(mul)), fn=cssqres, method="SANN", control=list(maxit=2000))
print(a$par)
test <- Tribolium(exp(a$par[1]), logistic(a$par[2]), logistic(a$par[3]), logistic(a$par[4]), logistic(a$par[5]), logistic(a$par[6]), 64, 35, 70, 19)
test <- matrix(test, ncol=3, byrow=T)
matplot(test)
@
\end{shaded}
